### not run
### this script is only for me to check something, it will not be used in analysis.

### add soft link of dbsnp
rm dbsnp; mkdir dbsnp; touch dbsnp/test  #  empty fold
ln -s ../../db/dbsnp/ dbsnp # link to in-house dbsnp 

mv ../test/test*txt example/
mv example/test*txt ../test/

### check module version
from importlib_metadata import version
print(version('argparse'))

### check by line
# f = gzip.open(XXX, 'rt')
# f.readline()

### add some snp to test 
# # hg 19
# $ tabix GCF_000001405.25.gz NC_000001.10:10054-10055
# NC_000001.10    10054   rs1639543798    C       CT      
# NC_000001.10    10054   rs1639543820    CT      C      
# NC_000001.10    10055   rs768019142     TA      T,TAA  
# NC_000001.10    10055   rs892501864     T       A,C    
# # hg38
# $ tabix GCF_000001405.39.gz NC_000001.11:10054-10055
# NC_000001.11    10054   rs1639543798    C       CT     
# NC_000001.11    10054   rs1639543820    CT      C       
# NC_000001.11    10055   rs768019142     TA      T,TAA  
# NC_000001.11    10055   rs892501864     T       A,C     
# # add this to test file
# 1   10054   C   CT  0.2313  0.002   0.23    0.3121
# 1   10054   CT  C   0.1213  0.042   0.12    0.0031
# 1   10054   T   A   0.165   0.011    0.63   0.0259
# 1   10054   T   C   0.151   0.023    0.02   0.0121

### a test
# python ./code/rsidmap_v2.py \
# --build hg38 \
# --chr_col CHR --pos_col POS --ref_col A2 --alt_col A1 \
# --file_gwas ./example/test.txt \
# --file_out ./example/test_out.txt

### codes from lingw
# import sys
# import time
# import gzip
# bim = sys.argv[1]
# db_snp = sys.argv[2]
# start = time.time()
# with open(bim) as f:
#     bim_pos = {tuple(i[:2]) for i in (line.split() for line in f)}
# i = 1
# start = time.time()
# with gzip.open(db_snp, 'rt') as f:  # dbSNP line in bim position
#     share_db_line = {tuple(i[:2]): i[2:] for i in (line.split() for line in f) if tuple(i[:2]) in bim_pos}
# end = time.time()
# end - start 
# # 1673.6871206760406

# with open(bim) as f:
#     for line in f:
#         parts = line.split()
#         token = tuple(parts[:2])
#         snp = parts[-1]
#         if token in share_db_line:
#             db_row = share_db_line[token]  # snp_id, a1, a2
#             if set(db_row[-2:]) == set(parts[2:4]):
#                 snp = db_row[0]
#         print(*parts, snp, sep='\t')

# end = time.time()
# print(end - start)


